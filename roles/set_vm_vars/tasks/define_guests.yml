---
- name: Load vars {{ guest }}
  ansible.builtin.include_vars:
    file: host_vars/{{ guest }}.yml
    name: vm
  when: os_image is not defined

- name: Load vars files {{ guest }}
  ansible.builtin.include_vars:
    file: "{{ lookup('first_found', files, errors='ignore') }}"
    name: vm
  vars:
    files:
      - host_vars/{{ guest }}.yml
      - vars/{{ guest }}.yml
  when: os_image is defined

- name: Combine vm vars with guests
  ansible.builtin.set_fact:
    guests: "{{ guests | default({}) | combine({guest: vm}, recursive=True) }}"

- name: Set tmp_dir
  ansible.builtin.set_fact:
    tmp_dir: /tmp/{{ lookup('password', '/dev/null chars=ascii_letters length=15') }}

- name: Set cfg_image
  ansible.builtin.set_fact:
    cfg_image: "{{ guest | lower | replace('.', '_') }}_cfg.iso"

- name: Add config iso
  ansible.builtin.set_fact:
    guests: |
      {{ guests | combine(
        { guest: { 'guest_def': { 'devices': { 'storage': { 'sdg': { 'pool': 'default', 'image': cfg_image, 'method': 'keep' }}}}}}, recursive=True) }}

- name: Define storage device attributes
  ansible.builtin.include_tasks: set_storage_device_attributes.yml
  loop: "{{ guests[guest]['guest_def']['devices']['storage'] | dict2items }}"
  loop_control:
    loop_var: device

- name: Set network device source_network
  ansible.builtin.set_fact:
    guests: "{{ guests | combine({guest: {'guest_def': {'devices': {'network': {device['key']: {'source_network': 'default'}}}}}}, recursive=True) }}"
  loop: "{{ guests[guest]['guest_def']['devices']['network'] | dict2items }}"
  loop_control:
    loop_var: device
  when: guests[guest]['guest_def']['devices']['network'][device['key']]['source_network'] is not defined
