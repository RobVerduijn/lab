---
- name: Run foreman installer to libvirt-compute-resource {{ (foreman_plugin_enable_compute_libvirt | bool) | ternary("enable", "disable") }}
  ansible.builtin.command: >-
    {{ foreman_install_cmd }}
    {{ (foreman_plugin_enable_compute_libvirt | bool) | ternary("--enable-foreman-compute-libvirt", "--no-enable-foreman-compute-libvirt") }}
  register: foreman_installer_run
  changed_when: foreman_installer_run['rc'] == 2
  failed_when: foreman_installer_run['rc'] not in [0, 2]

- name: Get foreman user info
  ansible.builtin.getent:
    database: passwd
    key: foreman

- name: Create ssh key pair for the foreman user (4096 bits, rsa)
  community.crypto.openssh_keypair:
    path: "{{ getent_passwd['foreman'][4] }}/.ssh/id_rsa"
    owner: foreman
    group: foreman
    setype: ssh_home_t

- name: Read foreman pubkey
  ansible.builtin.slurp:
    src: "{{ getent_passwd['foreman'][4] }}/.ssh/id_rsa.pub"
  register: foreman_pubkey

- name: Delegate block to {{ groups['buildhost'][0] }}
  delegate_to: "{{ groups['buildhost'][0] }}"
  remote_user: root
  block:
    - name: Add foreman user
      ansible.builtin.user:
        name: foreman
        home: /var/lib/foreman
        state: present

    - name: Install authorized key
      ansible.posix.authorized_key:
        user: foreman
        state: present
        key: "{{ foreman_pubkey['content'] | b64decode }}"

    - name: Allow access via polkit
      ansible.builtin.copy:
        dest: /etc/polkit-1/rules.d/20-libvirt-foreman-manage.rules
        content: |
            polkit.addRule(function(action, subject) {
            if ( action.id == "org.libvirt.unix.manage" && ( subject.isInGroup("admins") || subject.user == "foreman" )) {
                return polkit.Result.YES;
            }
            });
        mode: 0644

    - name: Get host pub key {{ groups['buildhost'][0] }}
      ansible.builtin.slurp:
        src: /etc/ssh/ssh_host_ecdsa_key.pub
      register: compute_pubkey

    - name: Add spice service to firewalld libvirt zone on {{ groups['buildhost'][0] }}
      ansible.posix.firewalld:
        zone: libvirt
        service: spice
        permanent: true
        state: enabled

- name: Add pub foreman known_hosts file {{ groups['buildhost'][0] }}
  ansible.builtin.known_hosts:
    name: "{{ groups['buildhost'][0] }}"
    key: "{{ groups['buildhost'][0] }} {{ compute_pubkey['content'] | b64decode }}"
    path: "{{ getent_passwd['foreman'][4] }}/.ssh/known_hosts"
    state: present

- name: Ensure known hosts file is owned by foreman
  ansible.builtin.file:
    path: "{{ getent_passwd['foreman'][4] }}/.ssh/known_hosts"
    owner: foreman
    group: foreman
    mode: 0644
    state: file

- name: Create livirt compute resource
  theforeman.foreman.compute_resource:
    password: "{{ foreman_installer_option_admin_password }}"
    server_url: https://{{ inventory_hostname }}
    username: "{{ foreman_installer_option_admin }}"
    validate_certs: false
    name: "{{ groups['buildhost'][0] }}"
    locations:
      - "{{ foreman_installer_option_loc }}"
    organizations:
      - "{{ foreman_installer_option_org }}"
    provider: libvirt
    provider_params:
      url: qemu+ssh://{{ groups['buildhost'][0] }}/system
      display_type: spice
      set_console_password: false
    state: present

- name: Compute profile 1-Small
  theforeman.foreman.compute_profile:
    password: "{{ foreman_installer_option_admin_password }}"
    server_url: https://{{ inventory_hostname }}
    username: "{{ foreman_installer_option_admin }}"
    validate_certs: false
    name: 1-Small
    compute_attributes:
      - compute_resource: "{{ groups['buildhost'][0] }}"
        vm_attrs:
          cpus: 1
          memory: 2147483648
          nics_attributes:
            0:
              type: network
              network: network_01
              model: virtio
          volumes_attributes:
            0:
              pool_name: default
              capacity: 10G
              allocation: 0G
              format_type: qcow2

- name: Compute profile 2-Medium
  theforeman.foreman.compute_profile:
    password: "{{ foreman_installer_option_admin_password }}"
    server_url: https://{{ inventory_hostname }}
    username: "{{ foreman_installer_option_admin }}"
    validate_certs: false
    name: 2-Medium
    compute_attributes:
      - compute_resource: "{{ groups['buildhost'][0] }}"
        vm_attrs:
          cpus: 2
          memory: 4294967296
          nics_attributes:
            0:
              type: network
              network: network_01
              model: virtio
          volumes_attributes:
            0:
              pool_name: default
              capacity: 20G
              allocation: 0G
              format_type: qcow2

- name: Compute profile 3-Large
  theforeman.foreman.compute_profile:
    password: "{{ foreman_installer_option_admin_password }}"
    server_url: https://{{ inventory_hostname }}
    username: "{{ foreman_installer_option_admin }}"
    validate_certs: false
    name: 3-Large
    compute_attributes:
      - compute_resource: "{{ groups['buildhost'][0] }}"
        vm_attrs:
          cpus: 4
          memory: 8589934592
          nics_attributes:
            0:
              type: network
              network: network_01
              model: virtio
          volumes_attributes:
            0:
              pool_name: default
              capacity: 60G
              allocation: 0G
              format_type: qcow2
