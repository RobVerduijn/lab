---
- name: create ipa lab guests
  hosts: buildhost
  gather_facts: true
  remote_user: root
  vars:
    vms:
      - ipa.linux.lab
      - ipaclient.linux.lab
  tasks:
    - name: include set vm vars
      include_role:
        name: RobVerduijn.lab.set_vm_vars

    - name: delete {{ vms | join(' ') }}
      include_role:
        name: RobVerduijn.lab.delete_guest
      when:
        - delete_vm is defined
        - delete_vm | bool

    - name: create {{ vms | join(' ') }}
      include_role:
        name: RobVerduijn.lab.create_guest

    - name: ensure guests are started
      community.libvirt.virt:
        name: "{{ guest['key'] }}"
        state: running
      loop: "{{ guests | dict2items }}"
      loop_control:
        loop_var: guest

    - name: add guests to inventory
      include_role:
        name: RobVerduijn.lab.add_guest_to_inventory
      loop: "{{ guests | dict2items }}"
      loop_control:
        loop_var: guest

- name: configure ipaserver
  hosts: ipaserver
  gather_facts: false
  remote_user: root

  tasks:
    - name: wait for {{ inventory_hostname }} to fully start
      wait_for_connection:

    - name: gather facts
      setup:

    - name: Get service on port 53
      shell: ss -tulpen
      register: results

    # ipa dns does not work yet
    # so configuring the resolv.conf to
    # forward to the libvirt network dns
    - name: temporary overide dns config
      copy:
        dest: /etc/resolv.conf
        content: |
          nameserver 192.168.100.1
        mode: 0644
      when: "'named' not in results['stdout']"

    - name: include roles
      include_role:
        name: "{{ my_role }}"
      loop:
        - RobVerduijn.lab.add_swap_file
        - RobVerduijn.lab.remove_cloud_init
        - RobVerduijn.lab.update
        - RobVerduijn.lab.conditional_reboot
        - freeipa.ansible_freeipa.ipaserver
        - fedora.linux_system_roles.network
        - fedora.linux_system_roles.timesync
      loop_control:
        loop_var: my_role

    - freeipa.ansible_freeipa.ipauser:
        ipaadmin_password: "{{ ipaadmin_password }}"
        name: student
        first: Student
        last: User
        password: "student"
        update_password: on_create

    - name: ready
      debug:
        msg: "{{ inventory_hostname }} is ready"

- name: configure ipaserver
  hosts: ipaclients
  gather_facts: false
  remote_user: root

  tasks:
    - name: wait for {{ inventory_hostname }} to fully start
      wait_for_connection:
    
    - name: gather facts
      setup:

    - name: ensure workstation desktop environment is present
      package:
        name: '@workstation-product-environment'
        state: present

    - name: Change default target to graphical.target
      file:
        src: /usr/lib/systemd/system/graphical.target
        dest: /etc/systemd/system/default.target
        state: link

    - name: include roles
      include_role:
        name: "{{ my_role }}"
      loop:
        - RobVerduijn.lab.add_swap_file
        - RobVerduijn.lab.remove_cloud_init
        - RobVerduijn.lab.update
        - fedora.linux_system_roles.network
        - fedora.linux_system_roles.timesync
        - freeipa.ansible_freeipa.ipaclient
        - RobVerduijn.lab.conditional_reboot
      loop_control:
        loop_var: my_role

    - name: ready
      debug:
        msg: "{{ inventory_hostname }} is ready"
