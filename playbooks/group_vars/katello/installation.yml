---
# minimal installer role options
foreman_installer_command: foreman-installer
foreman_installer_package: foreman-installer-katello
foreman_installer_scenario: katello
foreman_installer_verbose: true
foreman_installer_no_colors: false
# optional installer options (commment to disable them)
foreman_installer_option_org: Zolder Cloud Lab
foreman_installer_option_loc: zolder
foreman_installer_option_admin: admin
foreman_installer_option_admin_password: katello42  # encrypt this in production

# foreman default plugins
# katello won't function properly without remote ssh execution and ansible
# and are also default enabled in satellite so they are kinda mandatory
# disable these at your own peril
foreman_plugin_enable_remote_execution_ssh: true
foreman_plugin_enable_ansible: true  # requires the remote-exection-ssh plugin

# the configurations below are set to false so you can
# use the environment to practice
# if you don't care for such set the desired options to true
foreman_configure_infrastructure: false  # this will setup infrastructure
foreman_configure_proxies: false  # this will enable all proxies dns, dhcp, tftp, discovery, requires foreman_configure_infrastructure to be true
foreman_configure_content: false  # this will setup content: products, repositories, lifecycles, content views, activation keys
foreman_configure_hosts: false  # setup operating systems
foreman_configure_configure: false  # setup host groups

# optional plugin to enable katello integration with libvirt on the host
# rarely used in production but very usefull for this lab environment
# set to false to disable it
# requires foreman_configure_infrastructure to be true
foreman_plugin_enable_compute_libvirt: true  # setup compute resource

# forman dns proxy, requires foreman_configure_infrastructure to be true
foreman_proxy_dns: true
foreman_proxy_dns_reverse: "{{ (network_connections[0]['ip']['address'][0] | ansible.netcommon.ipaddr('revdns')).split('.')[1:-1] | join('.') }}"
foreman_proxy_dns_forwarders: "{{ network_connections[0]['ip']['gateway4'] }}"

# foreman configure domain
foreman_configure_domain: true  # requires dns_proxy and foreman_configure_infrastructure to be true

# foreman dhcp proxy
foreman_proxy_dhcp: true
foreman_proxy_dhcp_gateway: "{{ network_connections[0]['ip']['gateway4'] }}"
foreman_proxy_dhcp_nameservers: "{{ network_connections[0]['ip']['dns'] | join(',') }}"
foreman_proxy_dhcp_netmask: "{{ network_connections[0]['ip']['address'][0] | ansible.netcommon.ipaddr('netmask') }}"
foreman_proxy_dhcp_network: "{{ network_connections[0]['ip']['address'][0] | ansible.netcommon.ipaddr('network') }}"
foreman_proxy_dhcp_range_start: "{{ ( network_connections[0]['ip']['address'][0] | ansible.netcommon.ipaddr('address')).split('.')[:-1] | join('.') }}.150"
foreman_proxy_dhcp_range_stop: "{{ ( network_connections[0]['ip']['address'][0] | ansible.netcommon.ipaddr('address')).split('.')[:-1] | join('.') }}.254"
foreman_proxy_dhcp_range: "{{ foreman_proxy_dhcp_range_start }} {{ foreman_proxy_dhcp_range_stop }}"
foreman_proxy_dhcp_search_domains: "{{ ipa_domain }}"

# katello use local tftp, requires dhcp proxy and foreman_configure_infrastructure to be true
foreman_proxy_tftp: true
foreman_proxy_tftp_server_name: "{{ network_connections[0]['ip']['address'][0] | ansible.netcommon.ipaddr('address') }}"

# foreman configure subnet, requires all of the above
foreman_configure_subnet: true

# configure product, requires foreman_configure_subnet to be true
foreman_configure_product: true

# katello use discovery plugin, requies dhcp proxy and foreman_configure_infrastructure to be true
foreman_plugin_enable_discovery: true
# I couldn't find a way to write the following into an ansible play
# from the docs: https://theforeman.org/plugins/foreman_discovery/15.0/index.html
# find the 'Default PXE global template entry' option ( or use the search in settings menu)
#  Administer->settings->Provisioning
# set the 'Default PXE global template entry' to 'discovery'
# then re-build the pxe default config
# find the 'Build PXE Default' button and click it.
#  Hosts->Provisioning Templates->Build PXE Default

lifecycles:
  - name: Test
    prior: Library
  - name: Productie
    prior: Test

content_views:
  - name: CentOS 8 CV
    repos:
      - name: CentOS 8 BaseOS x86_64
        product: CentOS8
      - name: CentOS 8 AppStream x86_64
        product: CentOS8

theforeman_release: '3.0'
katello_release: '4.2'

# you probably don't need to edit the vars below

katello_repos:
  - https://yum.theforeman.org/releases/{{ theforeman_release }}/el{{ ansible_distribution_major_version }}/x86_64/foreman-release.rpm
  - https://yum.theforeman.org/katello/{{ katello_release }}/katello/el{{ ansible_distribution_major_version }}/x86_64/katello-repos-latest.rpm
  - centos-release-ansible-29
  - https://yum.puppet.com/puppet6-release-el-{{ ansible_distribution_major_version }}.noarch.rpm

dnf_modules:
  - name: ruby
    version: 2.7
    profiles: ''

  - name: postgresql
    version: 12
    profiles: ''

centos_repos:
  - name: powertools
    repofile: CentOS-Linux-PowerTools.repo

foreman_install_cmd: >-
  env LANG=en_US.UTF-8 LC_ALL=en_US.UTF8
  {{ foreman_installer_command }}
  --scenario {{ foreman_installer_scenario }}
  {{ (foreman_installer_verbose|bool) | ternary("-v", "") }}
  {{ (foreman_installer_no_colors|bool) | ternary("--no-colors", "") }}
  --detailed-exitcodes

katello_firewall_ports:
  - 69/udp
  - 80/tcp
  - 443/tcp
  - 5000/tcp
  - 5647/tcp
  - 5900-5930/tcp
  - 8000/tcp
  - 9090/tcp
